(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{503:function(v,_,t){"use strict";t.r(_);var a=t(2),s=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"算法基础"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法基础"}},[v._v("#")]),v._v(" 算法基础")]),v._v(" "),_("h2",{attrs:{id:"排序算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#排序算法"}},[v._v("#")]),v._v(" 排序算法")]),v._v(" "),_("ul",[_("li",[v._v("冒泡排序")]),v._v(" "),_("li",[v._v("选择排序")]),v._v(" "),_("li",[v._v("插入排序")]),v._v(" "),_("li",[v._v("快速排序")]),v._v(" "),_("li",[v._v("归并排序")]),v._v(" "),_("li",[v._v("堆排序")])]),v._v(" "),_("h2",{attrs:{id:"搜索算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#搜索算法"}},[v._v("#")]),v._v(" 搜索算法")]),v._v(" "),_("ul",[_("li",[v._v("线性搜索")]),v._v(" "),_("li",[v._v("二分搜索")]),v._v(" "),_("li",[v._v("深度优先搜索")]),v._v(" "),_("li",[v._v("广度优先搜索")])]),v._v(" "),_("h2",{attrs:{id:"动态规划"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[v._v("#")]),v._v(" 动态规划")]),v._v(" "),_("ul",[_("li",[v._v("背包问题")]),v._v(" "),_("li",[v._v("最长公共子序列")]),v._v(" "),_("li",[v._v("编辑距离")]),v._v(" "),_("li",[v._v("斐波那契数列")])]),v._v(" "),_("h2",{attrs:{id:"贪心算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#贪心算法"}},[v._v("#")]),v._v(" 贪心算法")]),v._v(" "),_("ul",[_("li",[v._v("活动选择问题")]),v._v(" "),_("li",[v._v("霍夫曼编码")]),v._v(" "),_("li",[v._v("最小生成树")])]),v._v(" "),_("h2",{attrs:{id:"分治算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分治算法"}},[v._v("#")]),v._v(" 分治算法")]),v._v(" "),_("ul",[_("li",[v._v("归并排序")]),v._v(" "),_("li",[v._v("快速排序")]),v._v(" "),_("li",[v._v("大整数乘法")])])])}),[],!1,null,null,null);_.default=s.exports}}]);