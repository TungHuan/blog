{"remainingRequest":"/Users/zhihu/code/blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/zhihu/code/blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhihu/code/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhihu/code/blog/node_modules/vuepress-theme-reco/components/Common.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/zhihu/code/blog/node_modules/vuepress-theme-reco/components/Common.vue","mtime":1753162186627},{"path":"/Users/zhihu/code/blog/node_modules/cache-loader/dist/cjs.js","mtime":1753161549117},{"path":"/Users/zhihu/code/blog/node_modules/babel-loader/lib/index.js","mtime":1753161544776},{"path":"/Users/zhihu/code/blog/node_modules/cache-loader/dist/cjs.js","mtime":1753161549117},{"path":"/Users/zhihu/code/blog/node_modules/vue-loader/lib/index.js","mtime":1753161548962}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5tYXAuanMiOwppbXBvcnQgeyBkZWZpbmVDb21wb25lbnQsIGNvbXB1dGVkLCByZWYsIG9uTW91bnRlZCB9IGZyb20gJ3Z1ZSc7CmltcG9ydCBOYXZiYXIgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvTmF2YmFyJzsKaW1wb3J0IFNpZGViYXIgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvU2lkZWJhcic7CmltcG9ydCBQZXJzb25hbEluZm8gZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvUGVyc29uYWxJbmZvJzsKaW1wb3J0IFBhc3N3b3JkIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1Bhc3N3b3JkJzsKaW1wb3J0IFN1YlNpZGViYXIgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvU3ViU2lkZWJhcic7CmltcG9ydCB7IHNldFRpbWVvdXQgfSBmcm9tICd0aW1lcnMnOwppbXBvcnQgeyB1c2VJbnN0YW5jZSB9IGZyb20gJ0B0aGVtZS9oZWxwZXJzL2NvbXBvc2FibGUnOwpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsKICAgIFNpZGViYXIsCiAgICBOYXZiYXIsCiAgICBQYXNzd29yZCwKICAgIFBlcnNvbmFsSW5mbywKICAgIFN1YlNpZGViYXIKICB9LAogIHByb3BzOiB7CiAgICBzaWRlYmFyOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBzaWRlYmFySXRlbXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgc2hvd01vZHVsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgc2V0dXAocHJvcHMsIGN0eCkgewogICAgY29uc3QgaW5zdGFuY2UgPSB1c2VJbnN0YW5jZSgpOwogICAgY29uc3QgaXNTaWRlYmFyT3BlbiA9IHJlZihmYWxzZSk7CiAgICBjb25zdCBpc0hhc0tleSA9IHJlZih0cnVlKTsKICAgIGNvbnN0IGlzSGFzUGFnZUtleSA9IHJlZih0cnVlKTsKICAgIGNvbnN0IGZpcnN0TG9hZCA9IHJlZih0cnVlKTsKICAgIGNvbnN0IHNob3VsZFNob3dTaWRlYmFyID0gY29tcHV0ZWQoKCkgPT4gcHJvcHMuc2lkZWJhckl0ZW1zLmxlbmd0aCA+IDApOwogICAgY29uc3QgYWJzb2x1dGVFbmNyeXB0aW9uID0gY29tcHV0ZWQoKCkgPT4gewogICAgICByZXR1cm4gaW5zdGFuY2UuJHRoZW1lQ29uZmlnLmtleVBhZ2UgJiYgaW5zdGFuY2UuJHRoZW1lQ29uZmlnLmtleVBhZ2UuYWJzb2x1dGVFbmNyeXB0aW9uID09PSB0cnVlOwogICAgfSk7CiAgICBjb25zdCBzaG91bGRTaG93TmF2YmFyID0gY29tcHV0ZWQoKCkgPT4gewogICAgICBjb25zdCB7CiAgICAgICAgdGhlbWVDb25maWcKICAgICAgfSA9IGluc3RhbmNlLiRzaXRlOwogICAgICBjb25zdCB7CiAgICAgICAgZnJvbnRtYXR0ZXIKICAgICAgfSA9IGluc3RhbmNlLiRwYWdlOwogICAgICBpZiAoZnJvbnRtYXR0ZXIubmF2YmFyID09PSBmYWxzZSB8fCB0aGVtZUNvbmZpZy5uYXZiYXIgPT09IGZhbHNlKSByZXR1cm4gZmFsc2U7CiAgICAgIHJldHVybiBpbnN0YW5jZS4kdGl0bGUgfHwgdGhlbWVDb25maWcubG9nbyB8fCB0aGVtZUNvbmZpZy5yZXBvIHx8IHRoZW1lQ29uZmlnLm5hdiB8fCBpbnN0YW5jZS4kdGhlbWVMb2NhbGVDb25maWcubmF2OwogICAgfSk7CiAgICBjb25zdCBwYWdlQ2xhc3NlcyA9IGNvbXB1dGVkKCgpID0+IHsKICAgICAgY29uc3QgY2xhc3NWYWx1ZSA9IHsKICAgICAgICAnbm8tbmF2YmFyJzogIXNob3VsZFNob3dOYXZiYXIudmFsdWUsCiAgICAgICAgJ3NpZGViYXItb3Blbic6IGlzU2lkZWJhck9wZW4udmFsdWUsCiAgICAgICAgJ25vLXNpZGViYXInOiAhc2hvdWxkU2hvd1NpZGViYXIudmFsdWUKICAgICAgfTsKICAgICAgY29uc3QgewogICAgICAgIHBhZ2VDbGFzczogdXNlclBhZ2VDbGFzcwogICAgICB9ID0gaW5zdGFuY2UuJGZyb250bWF0dGVyIHx8IHt9OwogICAgICBpZiAodXNlclBhZ2VDbGFzcykgY2xhc3NWYWx1ZVt1c2VyUGFnZUNsYXNzXSA9IHRydWU7CiAgICAgIHJldHVybiBjbGFzc1ZhbHVlOwogICAgfSk7CiAgICBjb25zdCBoYXNLZXkgPSAoKSA9PiB7CiAgICAgIGNvbnN0IHsKICAgICAgICBrZXlQYWdlCiAgICAgIH0gPSBpbnN0YW5jZS4kdGhlbWVDb25maWc7CiAgICAgIGlmICgha2V5UGFnZSB8fCAha2V5UGFnZS5rZXlzIHx8IGtleVBhZ2Uua2V5cy5sZW5ndGggPT09IDApIHsKICAgICAgICBpc0hhc0tleS52YWx1ZSA9IHRydWU7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGxldCB7CiAgICAgICAga2V5cwogICAgICB9ID0ga2V5UGFnZTsKICAgICAga2V5cyA9IGtleXMubWFwKGl0ZW0gPT4gaXRlbS50b0xvd2VyQ2FzZSgpKTsKICAgICAgaXNIYXNLZXkudmFsdWUgPSBrZXlzICYmIGtleXMuaW5kZXhPZihzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdrZXknKSkgPiAtMTsKICAgIH07CiAgICBjb25zdCBpbml0Um91dGVySGFuZGxlciA9ICgpID0+IHsKICAgICAgaW5zdGFuY2UuJHJvdXRlci5hZnRlckVhY2goKCkgPT4gewogICAgICAgIGlzU2lkZWJhck9wZW4udmFsdWUgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9OwogICAgY29uc3QgaGFzUGFnZUtleSA9ICgpID0+IHsKICAgICAgbGV0IHBhZ2VLZXlzID0gaW5zdGFuY2UuJGZyb250bWF0dGVyLmtleXM7CiAgICAgIGlmICghcGFnZUtleXMgfHwgcGFnZUtleXMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgaXNIYXNQYWdlS2V5LnZhbHVlID0gdHJ1ZTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgcGFnZUtleXMgPSBwYWdlS2V5cy5tYXAoaXRlbSA9PiBpdGVtLnRvTG93ZXJDYXNlKCkpOwogICAgICBpc0hhc1BhZ2VLZXkudmFsdWUgPSBwYWdlS2V5cy5pbmRleE9mKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oYHBhZ2VLZXkke3dpbmRvdy5sb2NhdGlvbi5wYXRobmFtZX1gKSkgPiAtMTsKICAgIH07CiAgICBjb25zdCB0b2dnbGVTaWRlYmFyID0gdG8gPT4gewogICAgICBpc1NpZGViYXJPcGVuLnZhbHVlID0gdHlwZW9mIHRvID09PSAnYm9vbGVhbicgPyB0byA6ICFpc1NpZGViYXJPcGVuLnZhbHVlOwogICAgfTsKICAgIGNvbnN0IGhhbmRsZUxvYWRpbmcgPSAoKSA9PiB7CiAgICAgIGNvbnN0IHRpbWUgPSBpbnN0YW5jZS4kZnJvbnRtYXR0ZXIuaG9tZSAmJiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKCdmaXJzdExvYWQnKSA9PSB1bmRlZmluZWQgPyAxMDAwIDogMDsKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgZmlyc3RMb2FkLnZhbHVlID0gZmFsc2U7CiAgICAgICAgaWYgKHNlc3Npb25TdG9yYWdlLmdldEl0ZW0oJ2ZpcnN0TG9hZCcpID09IHVuZGVmaW5lZCkgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnZmlyc3RMb2FkJywgZmFsc2UpOwogICAgICB9LCB0aW1lKTsKICAgIH07CiAgICBvbk1vdW50ZWQoKCkgPT4gewogICAgICBpbml0Um91dGVySGFuZGxlcigpOwogICAgICBoYXNLZXkoKTsKICAgICAgaGFzUGFnZUtleSgpOwogICAgICBoYW5kbGVMb2FkaW5nKCk7CiAgICB9KTsKICAgIHJldHVybiB7CiAgICAgIGlzU2lkZWJhck9wZW4sCiAgICAgIGFic29sdXRlRW5jcnlwdGlvbiwKICAgICAgc2hvdWxkU2hvd05hdmJhciwKICAgICAgc2hvdWxkU2hvd1NpZGViYXIsCiAgICAgIHBhZ2VDbGFzc2VzLAogICAgICBoYXNLZXksCiAgICAgIGhhc1BhZ2VLZXksCiAgICAgIGlzSGFzS2V5LAogICAgICBpc0hhc1BhZ2VLZXksCiAgICAgIHRvZ2dsZVNpZGViYXIsCiAgICAgIGZpcnN0TG9hZAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICAkZnJvbnRtYXR0ZXIobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgdGhpcy5oYXNLZXkoKTsKICAgICAgdGhpcy5oYXNQYWdlS2V5KCk7CiAgICB9CiAgfQp9KTs="},null]}